import requests
import telebot
from telebot import types
import os
import platform
import time
from datetime import datetime
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

# ////////////////////////////////////////////////////////////////////////////////////////////////
# bot settings
telegram_token = "token"
ids = [telegram_id1, telegram_id2, telegram_id3]  # –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ white list
teleram_id_admin = "id-tg-admin"
# /bot settings
bot = telebot.TeleBot(telegram_token)
# proxmox settings
proxmox_url = "https://1.0.0.1:8006"
proxmox_node_name = "node-name"
proxmox_user = "user-pve-on-proxmox"
proxmox_password = "pass"
proxmox_realm = "pve"  #pve or pam
id_vm_mashine_1 = 100
id_vm_mashine_2 = 101
id_vm_mashine_3 = 102
# /proxmox settings
# #////////////////////////////////////////////////////////////////////////////////////////////////


def authenticat():
    session = requests.Session()
    session.verify = False
    login_payload = {  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Å—Å–≤–æ—Ä–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        "username": proxmox_user,
        "password": proxmox_password,
        "realm": proxmox_realm,
    }
    login_url = f"{proxmox_url}/api2/json/access/ticket"  # url –¥–ª—è –ª–æ–≥–∏–Ω–∫–∏ –¥–µ–ª–∞–µ–º
    response = session.post(login_url, data=login_payload)  # –∑–∞–ø—Ä–æ—Å POST –ª–æ–≥–∏–Ω–µ–º—Å—è
    response.raise_for_status()  # –ø–æ–ª—É—á–∞–µ–º json —Ä–µ–∑—É–ª—è—Ç–∞—Ç–∞

    ticket = response.json()["data"]["ticket"] #–≤—ã–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ json response data in ticket)
    csrf_token = response.json()["data"]["CSRFPreventionToken"]  # –∫—É–∫–∏—Å—ã
    session.headers.update(
        {"CSRFPreventionToken": csrf_token, "Cookie": f"PVEAuthCookie={ticket}"}
    )
    return session


def status_vm(session, vm_id):
    status_vm_url = f"{proxmox_url}/api2/json/nodes/{proxmox_node_name}/qemu/{vm_id}/status/current"  # –∑–∞–ø—Ä–æ—Å –≥–µ—Ç –Ω–∞ —Å—Ç–∞—Ç—É—Å –≤–º
    response = session.get(status_vm_url) # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –¥–µ–ª–∞–µ–º GET –∑–∞–ø—Ä–æ—Å
    status_vm_proxmox = response.json()["data"]["status"] # –±–µ—Ä–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é data –≤ –Ω–µ–π –±–µ—Ä–µ–º status
    return status_vm_proxmox


def start_vm(session, vm_id):
    start_vm_url = f"{proxmox_url}/api2/json/nodes/{proxmox_node_name}/qemu/{vm_id}/status/start"  # –∑–∞–ø—Ä–æ—Å –≥–µ—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç –≤–º
    response = session.post(start_vm_url)  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –¥–µ–ª–∞–µ–º POST –∑–∞–ø—Ä–æ—Å
    response.raise_for_status()  # —á–µ–∫–∞–µ–º –æ—à–∏–±–∫–∏



def stop_vm(session, vm_id):
    # stop_vm_url = f"{proxmox_url}/api2/json/nodes/{proxmox_node_name}/qemu/{vm_id}/status/stop"  # –∑–∞–ø—Ä–æ—Å –≥–µ—Ç –Ω–∞ —Å—Ç–æ–ø (—ç–∫—Å—Ç–µ—Ä–µ–Ω–Ω—ã–π) –≤–º
    stop_vm_url = f"{proxmox_url}/api2/json/nodes/{proxmox_node_name}/qemu/{vm_id}/status/shutdown"  # –∑–∞–ø—Ä–æ—Å –≥–µ—Ç –Ω–∞ –≤—ã–∫–ª vm
    response = session.post(stop_vm_url)  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –¥–µ–ª–∞–µ–º POST –∑–∞–ø—Ä–æ—Å
    response.raise_for_status()  # —á–µ–∫–∞–µ–º –æ—à–∏–±–∫–∏



@bot.message_handler(commands=['start', 'go'])
def start_handler(message):
    global ids  # –º–∞—Å—Å–∏–≤ —Å –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ø—É—â–µ–Ω—ã
    if message.from_user.id not in ids:
        bot.send_message(teleram_id_admin, "–ü–û–ü–´–¢–ö–ê –í–•–û–î–ê ID:" + str(message.chat.id) + " –í—Ä–µ–º—è:" + str(
            datetime.now()))  # –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω—É

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üëã")
        btn2 = types.KeyboardButton("VMs")
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç!")
        time.sleep(2)  # –∫–æ—Å—Ç—ã–ª—å 2 —Å–µ–∫
        bot.send_message(message.chat.id, text="–Ø –±–æ—Ç –¥–ª—è on/off VM".format(message.from_user),
                         reply_markup=markup)  # —à–ª–µ–º –ø—Ä–∏–≤–µ—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç –∏ –¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        time.sleep(1)  # –∫–æ—Å—Ç—ã–ª—å 1 —Å–µ–∫
        bot.send_message(message.chat.id, text="All rights reserved " + str(datetime.now().year))

@bot.message_handler(content_types=['text'])  # —á–µ–∫–∞—è —Ç–µ–∫—Å—Ç
def func(message):
    if (message.text == "üëã"):
        bot.send_sticker(message.chat.id, sticker='CAACAgIAAxkBAAEKR3xlAAEefpv72ZSxDjKLIK55JtLmYJsAAk8YAAK_gxBLPTcI6IN6YGIwBA')
        bot.send_message(message.chat.id, text="–Ø –±–æ—Ç –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏–µ VMs –≤ proxmox")

    elif (message.text == "VMs"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton(f"{id_vm_mashine_1}")
        btn2 = types.KeyboardButton(f"{id_vm_mashine_2}")
        btn3 = types.KeyboardButton(f"{id_vm_mashine_3}")
        back = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(back, btn3, btn2, btn1)  # –¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–µ—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:", reply_markup=markup)

    elif (message.text == f"{id_vm_mashine_1}"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton(f"Power ON {id_vm_mashine_1}")  # –¥–∞–ª–∞–µ–º –∫–Ω–æ–ø–∫–∏
        btn2 = types.KeyboardButton(f"Power OFF {id_vm_mashine_1}")
        btn3 = types.KeyboardButton(f"Status {id_vm_mashine_1}")
        back = types.KeyboardButton("–ú–µ–Ω—é –í—ã–±–æ—Ä–∞ VMs")
        markup.add(back, btn3, btn2, btn1)  # –¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    elif (message.text == f"Power ON {id_vm_mashine_1}"):
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_1  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = start_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å—Ç–∞—Ç –≤–º
        bot.send_message(message.chat.id, text="ON")

    elif (message.text == f"Power OFF {id_vm_mashine_1}"):
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_1  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = stop_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ –æ—Ñ—Ñ –≤–º
        bot.send_message(message.chat.id, text="OFF")

    elif (message.text == f"Status {id_vm_mashine_1}"):
        # time.sleep(3)
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_1  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = status_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å—Ç–∞—Ç—É—Å –≤–º
        if response == "running":
            bot.send_message(message.chat.id, text="ON")
        elif response == "stopped":
            bot.send_message(message.chat.id, text="OFF")
        else:
            bot.send_message(message.chat.id, text="Error –ó–∞–ø—Ä–æ—Å –≤—ã–¥–∞–ª :" + str(response))

    elif (message.text == f"{id_vm_mashine_2}"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton(f"Power ON {id_vm_mashine_2}")  # –¥–∞–ª–∞–µ–º –∫–Ω–æ–ø–∫–∏
        btn2 = types.KeyboardButton(f"Power OFF {id_vm_mashine_2}")
        btn3 = types.KeyboardButton(f"Status {id_vm_mashine_2}")
        back = types.KeyboardButton("–ú–µ–Ω—é –í—ã–±–æ—Ä–∞ VMs")
        markup.add(back, btn3, btn2, btn1)  # –¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    elif (message.text == f"Power ON {id_vm_mashine_2}"):
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_2  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = start_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å—Ç–∞—Ç –≤–º
        bot.send_message(message.chat.id, text="ON")

    elif (message.text == f"Power OFF {id_vm_mashine_2}"):
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_2  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = stop_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ –æ—Ñ—Ñ –≤–º
        bot.send_message(message.chat.id, text="OFF")

    elif (message.text == f"Status {id_vm_mashine_2}"):
        # time.sleep(3)
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_2  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = status_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å—Ç–∞—Ç—É—Å –≤–º
        if response == "running":
            bot.send_message(message.chat.id, text="ON")
        elif response == "stopped":
            bot.send_message(message.chat.id, text="OFF")
        else:
            bot.send_message(message.chat.id, text="‚ùóError –ó–∞–ø—Ä–æ—Å –≤—ã–¥–∞–ª :" + str(response))


    elif (message.text == f"{id_vm_mashine_3}"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton(f"Power ON {id_vm_mashine_3}")  # –¥–∞–ª–∞–µ–º –∫–Ω–æ–ø–∫–∏
        btn2 = types.KeyboardButton(f"Power OFF {id_vm_mashine_3}")
        btn3 = types.KeyboardButton(f"Status {id_vm_mashine_3}")
        back = types.KeyboardButton("–ú–µ–Ω—é –í—ã–±–æ—Ä–∞ VMs")
        markup.add(back, btn3, btn2, btn1)  # –¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    elif (message.text == f"Power ON {id_vm_mashine_3}"):
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_3  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = start_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å—Ç–∞—Ç –≤–º
        bot.send_message(message.chat.id, text="ON")

    elif (message.text == f"Power OFF {id_vm_mashine_3}"):
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç—É—Ç –±—ã–ª bysg
        vm_id = id_vm_mashine_3  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = stop_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ –æ—Ñ—Ñ –≤–º
        bot.send_message(message.chat.id, text="OFF")

    elif (message.text == f"Status {id_vm_mashine_3}"):
        # time.sleep(3)
        session = authenticat()  # —Å–æ–∑–¥–∞–µ–º —Å–µ—Å–∏—é –∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —Ç–∞–º
        vm_id = id_vm_mashine_3  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–Ω–∏–µ–Ω–∏–µ –∞–π–¥–∏ –º–∞—à–∏–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        response = status_vm(session, vm_id)  # –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Å—Å–∏—é –∏ —Å—Ç–∞—Ç—É—Å –≤–º
        if response == "running":
            bot.send_message(message.chat.id, text="ON")
        elif response == "stopped":
            bot.send_message(message.chat.id, text="OFF")
        else:
            bot.send_message(message.chat.id, text="‚ùóError –ó–∞–ø—Ä–æ—Å –≤—ã–¥–∞–ª :" + str(response))

    elif (message.text == "–ú–µ–Ω—é –í—ã–±–æ—Ä–∞ VMs"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton(f"{id_vm_mashine_1}")  # –¥–∞–ª–∞–µ–º –∫–Ω–æ–ø–∫–∏
        btn2 = types.KeyboardButton(f"{id_vm_mashine_2}")
        back = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        btn3 = types.KeyboardButton(f"{id_vm_mashine_3}")
        markup.add(back, btn3, btn2, btn1)  # –¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ú–µ–Ω—é –í—ã–±–æ—Ä–∞ VM")
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–µ—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:", reply_markup=markup)


    elif (message.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):  # –∫–æ—Ñ–∏–≥ –∫–Ω–æ–ø–∫–æ–∫ –Ω–∞–∑–∞–¥
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã")
        button2 = types.KeyboardButton("VMs")
        markup.add(button1, button2)  # –∫–æ–Ω—Ñ–∏–≥ –∫–Ω–æ–ø–∫–æ–∫
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)  # –¥–∞–µ–º –º–µ–µ–Ω—é
    else:
        bot.send_message(message.chat.id, text="Unknown command") # 404

bot.polling(none_stop=True)
